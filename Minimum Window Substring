from collections import Counter, defaultdict
class Solution:
def minWindow(self, s: str, t: str) -> str:
if not s or not t or len(s) < len(t):
return ""
t_count = Counter(t)
required = len(t_count)
left, right = 0, 0
formed = 0
window_counts = defaultdict(int)
ans = float('inf'), None, None
while right < len(s):
char = s[right]
window_counts[char] += 1
if char in t_count and window_counts[char] == t_count[char]:
formed += 1
while formed == required and left <= right:
char = s[left]
if right - left + 1 < ans[0]:
ans = (right - left + 1, left, right)
window_counts[char] -= 1
if char in t_count and window_counts[char] < t_count[char]:
formed -= 1
left += 1
right += 1
return "" if ans[0] == float('inf') else s[ans[1]: ans[2] + 1]
